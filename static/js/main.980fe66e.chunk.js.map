{"version":3,"sources":["components/TrangChu.js","components/LienHe.js","mocks/mockListItems.js","components/SanPhamList.js","components/NgoaiCung.js","serviceWorker.js","index.js"],"names":["TrangChu","React","Component","LienHe","props","onChangeRadio","event","target","value","setState","isHien","state","type","name","defaultChecked","onChange","this","when","message","location","pathname","sanpham_list_items","id","SanPhamList","kqTrave","map","item","chiso","key","className","isAuthenGlobal","RouteCaNhan","children","rest","render","to","from","AuthenButton","history","useHistory","useState","is_authen","setIsAuthen","onClick","cb","push","setTimeout","LoginX","NgoaiCung","exact","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"uQAYeA,G,6KARX,OACE,6BACE,qE,GAJeC,IAAMC,YCiCdC,E,kDA/Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,cAAgB,SAACC,GAED,SADEA,EAAMC,OAAhBC,MAEJ,EAAKC,SAAS,CAAEC,QAAQ,IAExB,EAAKD,SAAS,CAAEC,QAAQ,KAT1B,EAAKC,MAAQ,CACXD,QAAQ,GAHO,E,qDAejB,OACE,6BACE,uEACA,8BACE,2BAAOE,KAAK,QAAQC,KAAK,WAAWC,gBAAc,EAACN,MAAM,SAASO,SAAUC,KAAKX,gBADnF,+BAEE,2BAAOO,KAAK,QAAQC,KAAK,WAAWL,MAAM,OAAOO,SAAUC,KAAKX,gBAFlE,oBAIA,kBAAC,IAAD,CACEY,KAAMD,KAAKL,MAAMD,OACjBQ,QAAS,SAAAC,GAAQ,gDAAoBA,EAASC,SAA7B,0E,GAzBNnB,IAAMC,WCEvBmB,EAAqB,CACrB,CACIC,GAAI,EACJT,KAAM,YAEV,CACIS,GAAI,EACJT,KAAM,eCuBCU,E,uKA7BX,IAAIC,EAAUH,EAAmBI,KAAI,SAACC,EAAMC,GAC1C,OAGE,wBAAIC,IAAKD,EAAOE,UAAU,mBACvBH,EAAKJ,GADR,KACcI,EAAKb,SAWvB,OACE,6BACE,+DACA,yBAAKgB,UAAU,OACb,wBAAIA,UAAU,cACXL,S,GAvBavB,IAAMC,WCI5B4B,GAAiB,EACrB,SAASC,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,SAAaC,EAAQ,4BAC1C,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,gBAAGf,EAAH,EAAGA,SAAH,OACNW,EACEE,EAEE,kBAAC,IAAD,CACEG,GAAI,CACFf,SAAU,SACVT,MAAO,CAAEyB,KAAMjB,UA8C/B,SAASkB,IACP,IAAIC,EAAUC,cADQ,EAEWC,oBAAS,GAFpB,mBAEfC,EAFe,KAEJC,EAFI,KAWtB,OACED,EACE,kEACuB,IACrB,4BACEE,QAAS,WATH,IAACC,EAULd,GAAiB,EAVZc,EAWG,kBAAMN,EAAQO,KAAK,MAVnCH,GAAY,GACZI,WAAWF,EAAI,OAMX,aASA,qDAEE,4BACED,QAAS,WAxBJ,IAACC,EAyBJd,GAAiB,EAzBbc,EA0BK,kBAAMN,EAAQO,KAAK,iBAzBtCH,GAAY,GACZI,WAAWF,EAAI,OAqBT,WAYV,SAASG,IAUP,OACE,6BACE,gD,IAwCSC,E,uKAhCX,OACE,kBAAC,IAAD,KACE,yBAAKnB,UAAU,WACb,kBAACQ,EAAD,MACA,4BACE,4BACE,kBAAC,IAAD,CAAMF,GAAG,WAAT,oBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,gBAAT,wBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAACH,EAAD,OAEF,kBAAChB,EAAD,CAAamB,KAAK,gBAChB,kBAAC,EAAD,c,GAzBUjD,IAAMC,WC9GViD,QACW,cAA7BC,OAAOjC,SAASkC,UAEe,UAA7BD,OAAOjC,SAASkC,UAEhBD,OAAOjC,SAASkC,SAASC,MACvB,2DCVNC,IAASrB,OAEP,kBAAC,EAAD,MAEEsB,SAASC,eAAe,SDuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM/C,c","file":"static/js/main.980fe66e.chunk.js","sourcesContent":["import React from 'react'\n\nclass TrangChu extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Đây là Trang chủ</h1>\n      </div>\n    )\n  }\n}\n\nexport default TrangChu\n","import React from 'react'\nimport { Prompt } from 'react-router-dom'\n\nclass LienHe extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isHien: false\n    }\n  }\n  onChangeRadio = (event) => {\n    let { value } = event.target\n    if (value === \"hien\") {\n      this.setState({ isHien: true })\n    } else {\n      this.setState({ isHien: false })\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h1>Đây là trang Liên hệ</h1>\n        <form>\n          <input type=\"radio\" name=\"capQuyen\" defaultChecked value=\"koHien\" onChange={this.onChangeRadio} />KO hiện prompt &nbsp;&nbsp;\n          <input type=\"radio\" name=\"capQuyen\" value=\"hien\" onChange={this.onChangeRadio} />Hiện prompt\n      </form>\n        <Prompt\n          when={this.state.isHien}\n          message={location => (`Nếu đi đến [${location.pathname}] thì sẽ mất data hiện tại có OK ko?`)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default LienHe\n","import React from 'react'\r\nimport TrangChu from \"../components/TrangChu\"\r\nimport LienHe from \"../components/LienHe\"\r\nimport SanPhamList from \"../components/SanPhamList\"\r\n\r\nvar sanpham_list_items = [\r\n    {\r\n        id: 1,\r\n        name: \"Iphone X\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Samsung S7\"\r\n    }\r\n]\r\nvar sanpham_detail_items = [\r\n    {\r\n        id: 1,\r\n        name: \"Iphone X\",\r\n        detail: \"Iphone X ios 16.2.3 64GB\",\r\n        price: 500\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Samsung S7\",\r\n        detail: \"Samsung S7 android 16.2.3 32GB\",\r\n        price: 480\r\n    }\r\n]\r\nvar menu_list_items = [\r\n    {\r\n        label: \"Trang chủ\",\r\n        to: \"/\",\r\n        exact: true\r\n    },\r\n    {\r\n        label: \"Sản phẩm\",\r\n        to: \"/sanphamlist\",\r\n        exact: false\r\n    },\r\n    {\r\n        label: \"Đăng nhập\",\r\n        to: \"/login\",\r\n        exact: false\r\n    },\r\n    {\r\n        label: \"Liên hệ\",\r\n        to: \"/lienhe\",\r\n        exact: false\r\n    }\r\n]\r\nvar route_items = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: () => <TrangChu />\r\n    },\r\n    {\r\n        path: \"/lienhe\",\r\n        exact: false,\r\n        component: () => <LienHe />\r\n    },\r\n    {\r\n        path: \"/sanphamlist\",\r\n        exact: false,\r\n        component: ({ match, location }) => <SanPhamList matchObj={match} locationObj={location} />\r\n    }\r\n]\r\n\r\nexport { menu_list_items, route_items, sanpham_list_items, sanpham_detail_items }","import React from 'react'\nimport { sanpham_list_items } from '../mocks/mockListItems'\n// import { NavLink } from 'react-router-dom'\n\nclass SanPhamList extends React.Component {\n  render() {\n    let kqTrave = sanpham_list_items.map((item, chiso) => {\n      return (\n        // Chạy code Redirect nên cmt out\n        // <NavLink key={chiso} to={`${this.props.matchObj.url}/${item.id}`}>\n        <li key={chiso} className=\"list-group-item\">\n          {item.id}) {item.name}\n        </li>\n        // Chạy code Redirect nên cmt out\n        // </NavLink>\n      )\n    })\n    // Chạy code Redirect nên cmt out\n    // let { state } = this.props.locationObj\n    // if (typeof state !== 'undefined') {\n    //   alert('Được redirect từ: ' + state.from.pathname)\n    // }\n    return (\n      <div>\n        <h1>Danh sách sản phẩm</h1>\n        <div className=\"row\">\n          <ul className=\"list-group\">\n            {kqTrave}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SanPhamList\n","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport '../NgoaiCung.css'\nimport SanPhamList from './SanPhamList'\nimport LienHe from './LienHe'\nimport TrangChu from './TrangChu'\n\nlet isAuthenGlobal = false\nfunction RouteCaNhan({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenGlobal ? ( // nếu authen rồi thì move to \"/sanphamlist\", unless redirect to \"/login\" with nguồn là \"/sanphamlist\"\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\n// component <LoginX> call hàm onAuthen() of sibling component <AuthenButton>\n// function onAuthen(cb) {\n//   this.setState({ is_authen: true })\n//   setTimeout(cb, 100)\n// }\n// class AuthenButton extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { is_authen: isAuthenGlobal }\n//     onAuthen = onAuthen.bind(this)\n//   }\n//   signOut = (cb) => {\n//     this.setState({ is_authen: false })\n//     isAuthenGlobal = this.state.is_authen\n//     setTimeout(cb, 100)\n//   }\n//   render() {\n//     isAuthenGlobal = this.state.is_authen\n//     return (\n//       this.state.is_authen ? (\n//         <p>\n//           Chào mừng đã log in!{\" \"}\n//           <button\n//             onClick={() => {\n//               this.signOut(() => alert('Đã đăng xuất OK!'))\n//             }}\n//           >Sign out\n//       </button>\n//         </p>\n//       ) : (\n//           <p>Chưa login!!!</p>\n//         )\n//     )\n//   }\n// }\n\n\nfunction AuthenButton() {\n  let history = useHistory() // hooks\n  const [is_authen, setIsAuthen] = useState(false)\n  let onAuthen = (cb) => {\n    setIsAuthen(true)\n    setTimeout(cb, 100)\n  }\n  let signOut = (cb) => {\n    setIsAuthen(false)\n    setTimeout(cb, 100)\n  }\n  return (\n    is_authen ? (\n      <p>\n        Chào mừng đã log in!{\" \"}\n        <button\n          onClick={() => {\n            isAuthenGlobal = false\n            signOut(() => history.push(\"/\"))\n          }}\n        >Sign out\n      </button>\n      </p>\n    ) : (\n        <p>\n          Chưa login!!! &nbsp;\n          <button\n            onClick={() => {\n              isAuthenGlobal = true\n              onAuthen(() => history.push(\"/sanphamlist\"))\n            }}\n          >Log in\n          </button>\n        </p>\n      )\n  )\n}\n\nfunction LoginX() {\n  // component <LoginX> call hàm onAuthen() of sibling component <AuthenButton>\n  // let history = useHistory() // hooks\n  // let location = useLocation()\n  // let { from } = location.state || { from: { pathname: \"/\" } } // from là nguồn(\"/sanphamlist\" || \"/\") redirect tới Login\n  // let login = () => {\n  //   onAuthen(() => { // sau 100ms sẽ callback > chạy xử lí này!\n  //     history.replace(from) // click \"Login\" sẽ redirect sang from (\"/sanphamlist\")\n  //   })\n  // }\n  return (\n    <div>\n      <h1>You must log in</h1>\n      {/* <button onClick={login}>Log in</button> */}\n    </div>\n  )\n}\n\nclass NgoaiCung extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"DoTQApp\" >\n          <AuthenButton />\n          <ul>\n            <li>\n              <Link to=\"/lienhe\">Liên hệ</Link>\n            </li>\n            <li>\n              <Link to=\"/sanphamlist\">Sản phẩm</Link>\n            </li>\n          </ul>\n          <Switch>\n            <Route exact path=\"/\">\n              <TrangChu />\n            </Route>\n            <Route path=\"/lienhe\">\n              <LienHe />\n            </Route>\n            <Route path=\"/login\">\n              <LoginX />\n            </Route>\n            <RouteCaNhan path=\"/sanphamlist\">\n              <SanPhamList />\n            </RouteCaNhan>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default NgoaiCung\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport NgoaiCung from './components/NgoaiCung'\nimport * as serviceWorker from './serviceWorker'\n//Redux\n// import storeReducer from './redux/StoreReducer'\n// import { Provider } from 'react-redux'\n\nReactDOM.render(\n  // <Provider store={storeReducer}>\n  <NgoaiCung />\n  // </Provider>\n  , document.getElementById('dotq')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}